#include <iostream> // Подключаем библиотеку ввода-вывода

// Функция для вывода элементов массива
void printArray(int arr[], int size) {
    for (int i = 0; i < size; ++i) {   // Цикл для прохода по массиву
        std::cout << arr[i] << " ";     // Печать текущего элемента массива
    }
    std::cout << "\n";                 // Перевод строки после печати всех элементов
}

// Основная функция сортировки выбором
void selectionSort(int arr[], int n) {
    int minIndex;                      // Переменная для хранения индекса минимального элемента
    
    // Внешний цикл проходит по каждому элементу массива
    for (int i = 0; i < n - 1; ++i) {  // До предпоследнего элемента включительно
        
        // Предполагаем, что первый несортированный элемент является минимальным
        minIndex = i;
        
        // Внутренний цикл ищет наименьший элемент среди оставшихся
        for (int j = i + 1; j < n; ++j) {
            if (arr[j] < arr[minIndex]) { // Если нашли меньший элемент
                minIndex = j;              // Обновляем индекс минимального элемента
            }
        }
        
        // Меняем местами найденный минимум с текущим элементом
        if (minIndex != i) {               // Проверка, чтобы избежать лишней операции
            std::swap(arr[i], arr[minIndex]); // Использование стандартной функции swap
        }
    }
}

// Главная функция программы
int main() {
    int array[] = {64, 25, 12, 22, 11};  // Исходный массив
    int n = sizeof(array)/sizeof(array[0]); // Вычисление размера массива
    
    std::cout << "Исходный массив:\n";
    printArray(array, n);                  // Вывод исходного массива
    
    selectionSort(array, n);               // Сортируем массив методом выбора
    
    std::cout << "Отсортированный массив:\n";
    printArray(array, n);                  // Вывод отсортированного массива
    
    return 0;                             // Завершение программы успешно
}
