Алгоритм сортировки выбором (Selection Sort)
•	Определение:
Сортировка выбором (Selection Sort) — алгоритм, на каждом шаге которого находят минимальный элемент среди последних и меняют его местами с текущим элементом в массиве.
•	Анализ:
o	Внешний цикл: Мы проходим по массиву слева направо. Для каждого элемента мы считаем, что, начиная с текущей позиции, остальная часть массива ещё не отсортирована. Например, на первой итерации внешний цикл выбирает первую позицию массива.
o	Минимальный элемент: Во внутреннем цикле ищем минимальное значение среди всех последующих элементов справа от выбранной позиции внешнего цикла. Это делается путем последовательного сравнения каждого последующего элемента с текущим минимальным кандидатом.
o	Обмен элементами: Когда внутренний цикл заканчивает свою работу, найденный минимальный элемент меняется местами с начальным элементом рассматриваемого диапазона (текущим положением внешнего цикла). Таким образом, самый маленький элемент перемещается в начало неотсортированной части массива.
o	Продолжение процесса: Затем процесс повторяется снова и снова, пока весь массив не окажется отсортированным.
•	Временная сложность: O(n^2)
•	Пояснение:
Основная функция сортировки содержит в себе два вложенных цикла, каждый из которых в худшем случае проходит по n элементам. Таким образом алгоритм n раз проходиться по n элементам, отсюда возникает квадратичная зависимостью.
Алгоритм сортировки обменом (пузырьком) (Bubble Sort) 
•	Определение:
Сортировка обменом (пузырьком) (Bubble Sort) — алгоритм, который проходит по списку несколько раз, сравнивая соседние элементы и меняя их местами, если они находятся в неправильном порядке, до тех пор, пока список не будет полностью отсортирован.
• Анализ:
o Определение длины массива: Используется стандартная функция len() для вычисления количества элементов в списке.
o Внешний цикл: Первый цикл запускает необходимое количество проходов по списку. Количество проходов равно длине списка минус единица, так как последний элемент уже автоматически займёт своё место после предыдущих проходов.
o Внутренний цикл: Этот цикл занимается непосредственной работой по проверке и возможному обмену соседних элементов. Из-за уменьшения числа необработанных элементов после каждого прохода, внутренний цикл сокращается на единицу на каждом витке внешнего цикла.
• Временная сложность: O(n^2)
• Пояснение:
Основная функция сортировки содержит в себе 2 вложенных цикла, где внешний проходится по n элементам, количество итераций внутреннего каждый проход уменьшается на 1, таким образом количество выполняемых сравнений и, в худшем случае, перестановок равно (n-1)n/2, что и даёт квадратичную зависимость.
Алгоритм сортировки вставками (Insertion Sort)
• Определение:
Сортировка вставками (Insertion Sort) - алгоритм основывающийся на постепенном построении отсортированной части массива путём вставки новых элементов на нужное место в уже отсортированную последовательность.
• Анализ:
Мы берём второй элемент массива и смотрим, куда его поместить в уже отсортированную левую часть. Затем переходим к третьему элементу и повторяем операцию, и так далее, пока весь массив не будет отсортирован.
•	Временная сложность: O(n^2)
• Пояснение:
Основная функция сортировки содержит в себе 2 вложенных цикла, где внешний проходится по n элементам, количество итераций внутреннего каждый проход увеличивается на 1, таким образом количество выполняемых сравнений и, в худшем случае, перестановок равно (n-1)n/2, что и даёт квадратичную зависимость.
Алгоритм сортировки слиянием (Merge Sort)
• Определение:
Cортировка слиянием (Merge Sort) - алгоритм, который использует принцип "разделяй и властвуй": массив делится на две половины, каждая половина рекурсивно сортируется отдельно, а потом обе половинки объединяются обратно в общий отсортированный массив.
• Анализ:
o этапы:
1. Разделить массив на две равные части.
2. Отдельно отсортировать каждую часть.
3. Соединить (слить) отсортированные части вместе.
o Этот процесс повторяется рекурсивно, пока каждый фрагмент не сократится до одиночных элементов, после чего они сливаются обратно в отсортированный массив.
•	Временная сложность: O(n log n)
• Пояснение:
o Подразделение массива: Каждое деление массива пополам происходит за константное время O(1).
o Рекурсивные вызовы: Алгоритм рекурсивно вызывает себя дважды на каждой глубине дерева рекурсий, причем глубина достигает log2(N). Следовательно, дерево рекурсий растет по высоте логарифмически.
o Объединение: На каждом уровне рекурсии объединение двух отсортированных массивов занимает линейное время O(N), так как необходимо пройти по обоим подмассивам и записать элементы в результирующий массив.
Алгоритм сортировки Шелла (Shellsort)
• Определение:
Cортировка Шелла (Shellsort) представляет собой усовершенствованную версию сортировки вставками. Идея метода заключается в том, чтобы сначала сравнивать элементы, находящиеся далеко друг от друга, а затем уменьшать интервал сравнения, постепенно приближаясь к обычному алгоритму сортировки вставками.
• Анализ:
o Вместо того чтобы сразу сравнивать соседние элементы, вначале сравниваются элементы, расположенные на некотором удалении друг от друга (определённом расстоянием gap).
o Значение расстояния (промежутка) постепенно уменьшается, делая процесс похожим на обычную сортировку вставками.
o Чем меньше становится промежуток (gap), тем ближе элементы становятся к своим правильным местам в отсортированном массиве.
•	Временная сложность: O(n^2) - О(n log n)
• Пояснение:
Так как алгоритм основан на 3 вложеных циклах, каждый из которых проходиться по некоторому количеству элементов не превышающему gap, которое меньше n и на каждой итерации внешнего цикла gap уменьшается в двое, что позволяет сильно ускорить процесс и добиться зависимости O(n log n), но в худшем случае может и привести к зависимости O(n^2)
Алгоритм быстрой сортировки (Quick Sort)
• Определение:
